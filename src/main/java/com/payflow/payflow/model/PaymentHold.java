package com.payflow.payflow.model;

import jakarta.persistence.*;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.time.LocalDateTime;

/**
 * JPA Entity representing a payment hold for an employee in the PayFlow system.
 * This class maps to the `payment_hold` table in the database and contains
 * information about payment holds placed on employees.
 */
@Entity
@Table(name = "payment_hold")
public class PaymentHold {

    /**
     * The unique identifier for the payment hold.
     * It is auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The ID of the employee for whom the payment is on hold.
     */
    @Column(name = "employee_id", nullable = false)
    private Long employeeId;

    /**
     * The reason for placing the payment on hold.
     */
    @Column(columnDefinition = "TEXT")
    private String reason;

    /**
     * The date and time when the payment hold was applied.
     */
    @Column(name = "applied_on")
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    private LocalDateTime appliedOn;

    /**
     * The ID of the user (HR/Admin) who applied the payment hold.
     */
    @Column(name = "applied_by")
    private Long appliedBy;

    /**
     * Default constructor required by JPA.
     */
    public PaymentHold() {
    }

    /**
     * Constructor for creating a new payment hold.
     * 
     * @param employeeId The ID of the employee for whom the payment is on hold.
     * @param reason The reason for placing the payment on hold.
     * @param appliedBy The ID of the user who applied the payment hold.
     */
    public PaymentHold(Long employeeId, String reason, Long appliedBy) {
        this.employeeId = employeeId;
        this.reason = reason;
        this.appliedBy = appliedBy;
        this.appliedOn = LocalDateTime.now();
    }

    // Getters and Setters
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getEmployeeId() {
        return employeeId;
    }

    public void setEmployeeId(Long employeeId) {
        this.employeeId = employeeId;
    }

    public String getReason() {
        return reason;
    }

    public void setReason(String reason) {
        this.reason = reason;
    }

    public LocalDateTime getAppliedOn() {
        return appliedOn;
    }

    public void setAppliedOn(LocalDateTime appliedOn) {
        this.appliedOn = appliedOn;
    }

    public Long getAppliedBy() {
        return appliedBy;
    }

    public void setAppliedBy(Long appliedBy) {
        this.appliedBy = appliedBy;
    }
}